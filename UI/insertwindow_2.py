# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'insertwindow_2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import  QWidget
import pymysql
import pandas as pd
import re
import openpyxl
from openpyxl import workbook
import os

from openpyxl.reader.excel import load_workbook


class Ui_Insert_2(QWidget):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1220, 1040)
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(280, 40, 661, 81))
        self.label.setStyleSheet("font: 48pt \"微软雅黑\";")
        self.label.setObjectName("label")
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(10, 150, 1201, 80))
        self.widget.setObjectName("widget")
        self.information_label = QtWidgets.QLabel(self.widget)
        self.information_label.setGeometry(QtCore.QRect(10, 0, 301, 71))
        self.information_label.setStyleSheet("font: 24pt \"微软雅黑\";")
        self.information_label.setObjectName("information_label")
        self.information_textEdit = QtWidgets.QTextEdit(self.widget)
        self.information_textEdit.setGeometry(QtCore.QRect(310, 10, 751, 51))
        self.information_textEdit.setStyleSheet("font: 12pt \"微软雅黑\"")
        self.information_textEdit.setObjectName("information_textEdit")
        self.information_pushButton = QtWidgets.QPushButton(self.widget)
        self.information_pushButton.setGeometry(QtCore.QRect(1080, 10, 121, 51))
        self.information_pushButton.setStyleSheet("font: 12pt \"微软雅黑\";")
        self.information_pushButton.setObjectName("information_pushButton")
        self.information_pushButton.clicked.connect(self.information_locate)
        self.widget_2 = QtWidgets.QWidget(Form)
        self.widget_2.setGeometry(QtCore.QRect(10, 240, 1201, 80))
        self.widget_2.setObjectName("widget_2")
        self.image_label = QtWidgets.QLabel(self.widget_2)
        self.image_label.setGeometry(QtCore.QRect(10, 0, 301, 71))
        self.image_label.setStyleSheet("font: 24pt \"微软雅黑\";")
        self.image_label.setObjectName("image_label")
        self.image_textEdit = QtWidgets.QTextEdit(self.widget_2)
        self.image_textEdit.setGeometry(QtCore.QRect(310, 10, 751, 51))
        self.image_textEdit.setStyleSheet("font: 12pt \"微软雅黑\"")
        self.image_textEdit.setObjectName("image_textEdit")
        self.image_pushButton = QtWidgets.QPushButton(self.widget_2)
        self.image_pushButton.setGeometry(QtCore.QRect(1080, 10, 121, 51))
        self.image_pushButton.setStyleSheet("font: 12pt \"微软雅黑\"")
        self.image_pushButton.setObjectName("image_pushButton")
        self.image_pushButton.clicked.connect(self.image_locate)
        self.result_textBrowser = QtWidgets.QTextBrowser(Form)
        self.result_textBrowser.setGeometry(QtCore.QRect(10, 330, 1201, 621))
        self.result_textBrowser.setStyleSheet("font: 12pt \"微软雅黑\"")
        self.result_textBrowser.setObjectName("result_textBrowser")
        self.insert_pushButton = QtWidgets.QPushButton(Form)
        self.insert_pushButton.setGeometry(QtCore.QRect(10, 970, 591, 41))
        self.insert_pushButton.setStyleSheet("font: 12pt \"微软雅黑\"")
        self.insert_pushButton.setObjectName("insert_pushButton")
        self.insert_pushButton.clicked.connect(self.insert)
        self.return_pushButton = QtWidgets.QPushButton(Form)
        self.return_pushButton.setGeometry(QtCore.QRect(620, 970, 591, 41))
        self.return_pushButton.setStyleSheet("font: 12pt \"微软雅黑\"")
        self.return_pushButton.setObjectName("return_pushButton")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def information_locate(self):
        location = QtWidgets.QFileDialog.getOpenFileName(None, "选取表格", "C:/")  # 起始路径
        location = str(location)
        location = location.replace('(', '')
        location = location.replace(')', '')
        location = location.replace(',', '')
        location = location.replace("'", '')
        location = location.replace('All Files *', '')
        location = location.strip()
        self.information_textEdit.setText(location)

    def image_locate(self):
        location = QtWidgets.QFileDialog.getExistingDirectory(None, "选取图片文件夹", "C:/")  # 起始路径
        location = str(location)
        location = location.replace('(', '')
        location = location.replace(')', '')
        location = location.replace(',', '')
        location = location.replace("'", '')
        location = location.replace('All Files *', '')
        location = location.strip()
        self.image_textEdit.setText(location)

    def insert(self):
        information_source = self.information_textEdit.toPlainText()
        image_source = self.image_textEdit.toPlainText()
        bk = openpyxl.load_workbook(information_source)
        sheet = bk.active
        minrow = sheet.min_row
        maxrow = sheet.max_row
        result = ''
        errorness = []
        if  os.path.isfile('../bin/settings.txt'):
            f = open('../bin/settings.txt', 'r')
            settings = f.readlines()
            host = settings[0].strip()
            port = int(settings[1].replace('\n',''))
            user = settings[2].replace('\n','')
            pswd = settings[3].replace('\n','')
            db_name = settings[4].replace('\n','')
            table = settings[5].replace('\n','')
        else:
            self.result_textBrowser.setText("数据库错误")

        # 打开数据库连接
        try:
            db = pymysql.connect(host=host, user=user, passwd=pswd, port=port, db=db_name)
            print('连接成功！')
        except:
            print('something wrong!')

        for row in range(minrow + 1, maxrow + 1):
            name = ''
            name_strings = re.findall(r'[\u4e00-\u9fa5]', str(sheet.cell(row, 1).value))
            for string in name_strings:
                name = name + string
            ID = str(sheet.cell(row, 2).value)
            if (str(sheet.cell(row, 3).value) == 'SEX:F'):
                gender = '女'
            else:
                gender = '男'
            current_date = str(sheet.cell(row, 4).value)
            birthday_date = str(sheet.cell(row, 5).value)
            current = int(current_date[0:4]) * 365 + int(current_date[5:7]) * 30 + int(current_date[8:10])
            birthday = int(birthday_date[0:4]) * 365 + int(birthday_date[5:7]) * 30 + int(birthday_date[8:10])
            age = str(round((current - birthday) / 365, 2))
            nation = str(sheet.cell(row, 7).value)
            position = str(sheet.cell(row, 8).value)
            kind = str(sheet.cell(row, 9).value)
            print(name, ID, gender, age, nation, position, kind)
            path = image_source
            file_name = ID + "-" + current_date[0:4] + "-" + current_date[5:7] + "-" + current_date[8:10] + "-" + kind
            error = True
            for filewalks in os.walk(path):
                for files in filewalks[2]:
                    if file_name in files:
                        filename = os.path.join(filewalks[0], files)
                        filename = filename.replace("\\", "/")
                        error = False

                        # 使用 cursor() 方法创建一个游标对象 cursor
                        cursor = db.cursor()

                        # SQL 插入语句
                        sql = "INSERT INTO "+table+"(id,name,gender,age,nation,position,location,kind) VALUES (%s, '%s', '%s', %s, '%s','%s','%s','%s')" % (ID, name, gender, age, nation, position, filename, kind)
                        try:
                            # 执行sql语句
                            cursor.execute(sql)
                            # 提交到数据库执行
                            db.commit()
                            print('数据插入成功！')
                        except:
                            # 如果发生错误则回滚
                            db.rollback()
                            print('数据插入错误！')
                            self.result_textBrowser.setText('数据插入错误！')
                        print(name, ' is in', filename)
            if(error == False):
                result = result + '数据插入成功！\n'+'ID:' + ID + ' '+'姓名:' + name + ' '+'性别:' + gender + ' '+'年龄:' + age + ' '+'民族:' + nation + ' '+'地区:' + position + ''+'影像资料类型:' + kind + '\n'
            if(error == True):
                result = result + name + "数据插入失败 \n"
                errorness.append({"id": ID, "name": name, "gender": str(sheet.cell(row, 3).value), "age": age, "nation": nation, "position": position, "kind": kind, "birthday":birthday_date,"current": current_date})
        self.result_textBrowser.setText(result)
        self.pd_toExcel(errorness,(image_source + '/' + "出错图片名单.xlsx"))

    def pd_toExcel(self,data, fileName):  # pandas库储存数据到excel
        print("导入开始")
        ids = []
        names = []
        genders = []
        ages = []
        current_date = []
        birthday_date = []
        nations = []
        positions = []
        kinds = []
        for i in range(len(data)):
            ids.append(data[i]["id"])
            names.append(data[i]["name"])
            genders.append(data[i]["gender"])
            ages.append(data[i]["age"])
            nations.append(data[i]["nation"])
            positions.append(data[i]["position"])
            kinds.append(data[i]["kind"])
            birthday_date.append(data[i]["birthday"])
            current_date.append(data[i]["current"])

        dfData = {  # 用字典设置DataFrame所需数据
            '姓名': names,
            '序号': ids,
            '性别': genders,
            '拍摄时间': current_date,
            '出生日期': birthday_date,
            '年龄': ages,
            '民族': nations,
            '地区': positions,
            '影像资料类型': kinds
        }
        df = pd.DataFrame(dfData) # 创建DataFrame
        df.to_excel(fileName,index=False)  # 存表，去除原始索引列（0,1,2...）
        print("导入成功")

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "批量增加影像资料"))
        self.information_label.setText(_translate("Form", "选择信息源文件："))
        self.information_pushButton.setText(_translate("Form", "选择"))
        self.image_label.setText(_translate("Form", "选择图像文件夹："))
        self.image_pushButton.setText(_translate("Form", "选择"))
        self.insert_pushButton.setText(_translate("Form", "确定"))
        self.return_pushButton.setText(_translate("Form", "返回上一页"))
